Hi Disen Chitilapilly!

Please find the below execution report:

28-06-2017:20:10:01,638 INFO     [client_hms_config.py:26] -Setup for Testcase Started
28-06-2017:20:10:01,638 INFO     [client_hms_config.py:40] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
28-06-2017:20:10:01,639 INFO     [client_hms_config.py:41] test_1_hms_server_status - Started
28-06-2017:20:10:01,639 INFO     [server_status.py:23] Check_all_server_status Started
28-06-2017:20:10:01,639 INFO     [server_status.py:80] ping_hms - http://hms1-cert1.cn.ooma.com:8084/hms/ping
Connection to hms1-cert1.cn.ooma.com 8084 port [tcp/*] succeeded!
28-06-2017:20:10:01,657 INFO     [server_status.py:67] hms1-cert1.cn.ooma.com:8084 is up!!!!!!
28-06-2017:20:10:01,658 INFO     [server_status.py:25] HMS Status is True
Connection to beehive-cert.hms.ooma.com 8443 port [tcp/pcsync-https] succeeded!
28-06-2017:20:10:01,665 INFO     [server_status.py:67] beehive-cert.hms.ooma.com:8443 is up!!!!!!
28-06-2017:20:10:01,665 INFO     [server_status.py:28] Beehive Server Status is True
Connection to nimbits1-cert1.cn.ooma.com 9080 port [tcp/glrpc] succeeded!
28-06-2017:20:10:01,672 INFO     [server_status.py:67] nimbits1-cert1.cn.ooma.com:9080 is up!!!!!!
28-06-2017:20:10:01,673 INFO     [server_status.py:31] Nimbits Server Status is True
28-06-2017:20:10:01,673 INFO     [server_status.py:32] Check_all_server_status Ended
28-06-2017:20:10:01,673 INFO     [client_hms_config.py:44] Result : HMS/Nimbits/Beehive Server Status - pass
28-06-2017:20:10:01,673 INFO     [client_hms_config.py:45] test_1_hms_server_status - Completed
28-06-2017:20:10:01,673 INFO     [client_hms_config.py:46] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.28-06-2017:20:10:01,673 INFO     [client_hms_config.py:26] -Setup for Testcase Started
28-06-2017:20:10:01,673 INFO     [client_hms_config.py:49] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
28-06-2017:20:10:01,674 INFO     [client_hms_config.py:50] test_hms_config_in_client - Started
28-06-2017:20:10:01,674 INFO     [client_setup.py:21] Client_setup_is_good started
28-06-2017:20:10:01,677 DEBUG    [transport.py:1572] starting thread (client mode): 0x25fff10L
28-06-2017:20:10:01,677 DEBUG    [transport.py:1572] Local version/idstring: SSH-2.0-paramiko_2.1.2
28-06-2017:20:10:01,684 DEBUG    [transport.py:1572] Remote version/idstring: SSH-1.99-OpenSSH_5.3
28-06-2017:20:10:01,684 INFO     [transport.py:1572] Connected (version 1.99, client OpenSSH_5.3)
28-06-2017:20:10:01,685 DEBUG    [transport.py:1572] kex algos:[u'diffie-hellman-group-exchange-sha256', u'diffie-hellman-group-exchange-sha1', u'diffie-hellman-group14-sha1', u'diffie-hellman-group1-sha1'] server key:[u'ssh-rsa', u'ssh-dss'] client encrypt:[u'aes128-ctr', u'aes192-ctr', u'aes256-ctr', u'arcfour256', u'arcfour128', u'aes128-cbc', u'3des-cbc', u'blowfish-cbc', u'cast128-cbc', u'aes192-cbc', u'aes256-cbc', u'arcfour', u'rijndael-cbc@lysator.liu.se'] server encrypt:[u'aes128-ctr', u'aes192-ctr', u'aes256-ctr', u'arcfour256', u'arcfour128', u'aes128-cbc', u'3des-cbc', u'blowfish-cbc', u'cast128-cbc', u'aes192-cbc', u'aes256-cbc', u'arcfour', u'rijndael-cbc@lysator.liu.se'] client mac:[u'hmac-md5', u'hmac-sha1', u'umac-64@openssh.com', u'hmac-ripemd160', u'hmac-ripemd160@openssh.com', u'hmac-sha1-96', u'hmac-md5-96'] server mac:[u'hmac-md5', u'hmac-sha1', u'umac-64@openssh.com', u'hmac-ripemd160', u'hmac-ripemd160@openssh.com', u'hmac-sha1-96', u'hmac-md5-96'] cli
ent compress:[u'none', u'zlib@openssh.com'] server compress:[u'none', u'zlib@openssh.com'] client lang:[u''] server lang:[u''] kex follows?False
28-06-2017:20:10:01,685 DEBUG    [transport.py:1572] Kex agreed: diffie-hellman-group1-sha1
28-06-2017:20:10:01,685 DEBUG    [transport.py:1572] Cipher agreed: aes128-ctr
28-06-2017:20:10:01,685 DEBUG    [transport.py:1572] MAC agreed: hmac-md5
28-06-2017:20:10:01,685 DEBUG    [transport.py:1572] Compression agreed: none
28-06-2017:20:10:01,928 DEBUG    [transport.py:1572] kex engine KexGroup1 specified hash_algo <built-in function openssl_sha1>
28-06-2017:20:10:01,929 DEBUG    [transport.py:1572] Switch to new keys ...
28-06-2017:20:10:01,931 DEBUG    [transport.py:1572] Adding ssh-rsa host key for prv1-cert1.cn.ooma.com: a4e5133f697f975f80955a8d427defdc
28-06-2017:20:10:01,970 DEBUG    [transport.py:1572] userauth is OK
28-06-2017:20:10:01,974 INFO     [transport.py:1572] Authentication (password) successful!
28-06-2017:20:10:01,996 INFO     [ssh_apis.py:32] Auto_Logger: Ssh to server prv1-cert1.cn.ooma.com
28-06-2017:20:10:01,996 DEBUG    [channel.py:1148] [chan 0] Max packet in: 32768 bytes
28-06-2017:20:10:01,997 DEBUG    [channel.py:1148] [chan 0] Max packet out: 32768 bytes
28-06-2017:20:10:01,997 DEBUG    [transport.py:1572] Secsh channel 0 opened.
28-06-2017:20:10:02,1 DEBUG    [channel.py:1148] [chan 0] Sesch channel 0 request ok
28-06-2017:20:10:02,2 DEBUG    [channel.py:1148] [chan 0] Sesch channel 0 request ok
28-06-2017:20:10:02,2 INFO     [client.py:39] Auto_Logger: get showmyx output - showmyx 220120 | grep IPADDR=
28-06-2017:20:10:07,46 DEBUG    [transport.py:1572] EOF in transport thread
28-06-2017:20:10:07,72 INFO     [client_setup.py:28] IP Address of Client Telo 10.66.16.40
28-06-2017:20:10:07,75 DEBUG    [transport.py:1572] starting thread (client mode): 0x25fffd0L
28-06-2017:20:10:07,75 DEBUG    [transport.py:1572] Local version/idstring: SSH-2.0-paramiko_2.1.2
28-06-2017:20:10:07,84 DEBUG    [transport.py:1572] Remote version/idstring: SSH-1.99-OpenSSH_5.3
28-06-2017:20:10:07,84 INFO     [transport.py:1572] Connected (version 1.99, client OpenSSH_5.3)
28-06-2017:20:10:07,85 DEBUG    [transport.py:1572] kex algos:[u'diffie-hellman-group-exchange-sha256', u'diffie-hellman-group-exchange-sha1', u'diffie-hellman-group14-sha1', u'diffie-hellman-group1-sha1'] server key:[u'ssh-rsa', u'ssh-dss'] client encrypt:[u'aes128-ctr', u'aes192-ctr', u'aes256-ctr', u'arcfour256', u'arcfour128', u'aes128-cbc', u'3des-cbc', u'blowfish-cbc', u'cast128-cbc', u'aes192-cbc', u'aes256-cbc', u'arcfour', u'rijndael-cbc@lysator.liu.se'] server encrypt:[u'aes128-ctr', u'aes192-ctr', u'aes256-ctr', u'arcfour256', u'arcfour128', u'aes128-cbc', u'3des-cbc', u'blowfish-cbc', u'cast128-cbc', u'aes192-cbc', u'aes256-cbc', u'arcfour', u'rijndael-cbc@lysator.liu.se'] client mac:[u'hmac-md5', u'hmac-sha1', u'umac-64@openssh.com', u'hmac-ripemd160', u'hmac-ripemd160@openssh.com', u'hmac-sha1-96', u'hmac-md5-96'] server mac:[u'hmac-md5', u'hmac-sha1', u'umac-64@openssh.com', u'hmac-ripemd160', u'hmac-ripemd160@openssh.com', u'hmac-sha1-96', u'hmac-md5-96'] clie
nt compress:[u'none', u'zlib@openssh.com'] server compress:[u'none', u'zlib@openssh.com'] client lang:[u''] server lang:[u''] kex follows?False
28-06-2017:20:10:07,85 DEBUG    [transport.py:1572] Kex agreed: diffie-hellman-group1-sha1
28-06-2017:20:10:07,85 DEBUG    [transport.py:1572] Cipher agreed: aes128-ctr
28-06-2017:20:10:07,85 DEBUG    [transport.py:1572] MAC agreed: hmac-md5
28-06-2017:20:10:07,85 DEBUG    [transport.py:1572] Compression agreed: none
28-06-2017:20:10:07,137 DEBUG    [transport.py:1572] kex engine KexGroup1 specified hash_algo <built-in function openssl_sha1>
28-06-2017:20:10:07,137 DEBUG    [transport.py:1572] Switch to new keys ...
28-06-2017:20:10:07,139 DEBUG    [transport.py:1572] Adding ssh-rsa host key for prv1-cert1.cn.ooma.com: a4e5133f697f975f80955a8d427defdc
28-06-2017:20:10:07,179 DEBUG    [transport.py:1572] userauth is OK
28-06-2017:20:10:07,183 INFO     [transport.py:1572] Authentication (password) successful!
28-06-2017:20:10:07,204 INFO     [ssh_apis.py:32] Auto_Logger: Ssh to server prv1-cert1.cn.ooma.com
28-06-2017:20:10:07,204 DEBUG    [channel.py:1148] [chan 0] Max packet in: 32768 bytes
28-06-2017:20:10:07,205 DEBUG    [channel.py:1148] [chan 0] Max packet out: 32768 bytes
28-06-2017:20:10:07,206 DEBUG    [transport.py:1572] Secsh channel 0 opened.
28-06-2017:20:10:07,207 DEBUG    [channel.py:1148] [chan 0] Sesch channel 0 request ok
28-06-2017:20:10:07,209 DEBUG    [channel.py:1148] [chan 0] Sesch channel 0 request ok
28-06-2017:20:10:07,209 INFO     [client.py:80] Auto_Logger: get showmyx output - showmyx 220120
28-06-2017:20:10:12,239 DEBUG    [transport.py:1572] EOF in transport thread
28-06-2017:20:10:12,247 INFO     [client_setup.py:32] Controller Info {'BEEHIVE_URL': 'https://beehive-cert.hms.ooma.com:8443/', 'NIMBITS_EMAIL': 'nxdicffbu@ooma.com', 'NIMBITS_URL': 'https://nimbits-cert.hms.ooma.com:9443/', 'IP': '10.66.16.40', 'BEEHIVE_PASSWORD': 'vbe5dbpj4', 'ENABLED': '1', 'CONTROLLER_ID': '1360', 'BEEHIVE_USER': 'pgrmrv4gs', 'NIMBITS_TOKEN': 'vc4tpnspi', 'USER_ENABLED': '1'}
28-06-2017:20:10:13,358 INFO     [client_setup.py:37] Openremote is running successfully
28-06-2017:20:10:13,358 INFO     [client_hms_config.py:53] Result : OR Enabled Client Status - pass
28-06-2017:20:10:13,358 INFO     [client_hms_config.py:54] test_hms_config_in_client - Completed
28-06-2017:20:10:13,359 INFO     [client_hms_config.py:55] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.28-06-2017:20:10:13,359 INFO     [client_hms_config.py:26] -Setup for Testcase Started
28-06-2017:20:10:13,359 INFO     [client_hms_config.py:91] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
28-06-2017:20:10:13,359 INFO     [client_hms_config.py:92] test_door_sensor_status - Started
28-06-2017:20:10:13,359 INFO     [client_hms_config.py:93] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
28-06-2017:20:10:13,384 INFO     [door_rest_cli.py:23] door_sensor_status - http://10.66.16.162:5000
28-06-2017:20:10:20,392 INFO     [door_rest_cli.py:90] ========> Enabling Door Sensor Tampering
28-06-2017:20:10:20,424 INFO     [door_rest_cli.py:94] door_sensor_tampering_enabled - http://10.66.16.162:5000/sensor/Door/interface/tamper/switch/on
28-06-2017:20:10:21,425 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:10:21,426 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:10:21,426 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:10:21,426 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:10:21,426 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:10:21,426 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:10:21,472 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:10:21,476 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:10:21,482 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:10:21,497 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:10:21,497 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:10:21,498 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:10:21,498 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:10:22,499 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:10:22,547 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:10:22,547 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:10:22,547 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:10:24,447 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705820807, "deviceType":"DOOR_SENSOR", "eventType":7, "message":"Door Sensor 1 detects tampering.", "isAlert":true, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:10:25,449 INFO     [validate_logs.py:31] Current Result - {"time":1498705820807, "deviceType":"DOOR_SENSOR", "eventType":7, "message":"Door Sensor 1 detects tampering.", "isAlert":true, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result detects tampering
28-06-2017:20:10:25,449 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:10:25,450 INFO     [client_hms_config.py:106] Result : Tampering Door Sensor Status - pass
28-06-2017:20:10:32,457 INFO     [door_rest_cli.py:102] ========> Enabling Door Sensor Armed
28-06-2017:20:10:32,490 INFO     [door_rest_cli.py:106] door_sensor_tampering_disabled -http://10.66.16.162:5000/sensor/Door/interface/tamper/switch/off
28-06-2017:20:10:33,491 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:10:33,492 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:10:33,492 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:10:33,492 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:10:33,492 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:10:33,492 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:10:33,497 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:10:33,499 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:10:33,500 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:10:33,501 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:10:33,501 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:10:33,502 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:10:33,502 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:10:34,503 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:10:34,517 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:10:34,518 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:10:34,518 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:10:36,386 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705832966, "deviceType":"DOOR_SENSOR", "eventType":8, "message":"Door Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:10:37,387 INFO     [validate_logs.py:31] Current Result - {"time":1498705832966, "deviceType":"DOOR_SENSOR", "eventType":8, "message":"Door Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result is armed
28-06-2017:20:10:37,388 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:10:37,388 INFO     [client_hms_config.py:112] Result : Arming Door Sensor Status - pass
28-06-2017:20:10:44,395 INFO     [door_rest_cli.py:114] ========> Enabling Door Sensor Open
28-06-2017:20:10:44,464 INFO     [door_rest_cli.py:118] door_sensor_open - http://10.66.16.162:5000/sensor/Door/interface/event/switch/off
28-06-2017:20:10:45,465 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:10:45,466 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:10:45,466 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:10:45,466 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:10:45,466 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:10:45,466 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:10:45,471 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:10:45,472 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:10:45,473 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:10:45,474 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:10:45,475 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:10:45,475 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:10:45,475 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:10:46,476 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:10:46,493 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:10:46,493 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:10:46,493 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:10:48,621 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705832966, "deviceType":"DOOR_SENSOR", "eventType":8, "message":"Door Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:10:49,623 INFO     [validate_logs.py:31] Current Result - {"time":1498705832966, "deviceType":"DOOR_SENSOR", "eventType":8, "message":"Door Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result is open
28-06-2017:20:10:49,623 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:10:49,623 INFO     [client_hms_config.py:118] Result : Open Door Sensor Status - fail
28-06-2017:20:10:56,630 INFO     [door_rest_cli.py:126] ========> Enabling Door Sensor Closed
28-06-2017:20:10:56,664 INFO     [door_rest_cli.py:130] send_door_sensor_close - http://10.66.16.162:5000/sensor/Door/interface/event/switch/on
28-06-2017:20:10:57,666 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:10:57,666 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:10:57,666 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:10:57,666 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:10:57,666 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:10:57,666 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:10:57,672 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:10:57,673 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:10:57,674 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:10:57,675 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:10:57,675 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:10:57,676 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:10:57,676 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:10:58,677 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:10:58,692 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:10:58,692 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:10:58,692 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:10:59,997 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705832966, "deviceType":"DOOR_SENSOR", "eventType":8, "message":"Door Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:11:00,998 INFO     [validate_logs.py:31] Current Result - {"time":1498705832966, "deviceType":"DOOR_SENSOR", "eventType":8, "message":"Door Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result is closed
28-06-2017:20:11:00,999 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:11:00,999 INFO     [client_hms_config.py:124] Result : Close Door Sensor Status - fail
28-06-2017:20:11:08,6 INFO     [door_rest_cli.py:31] ========> Enabling Door Sensor Paging
28-06-2017:20:11:08,55 INFO     [door_rest_cli.py:35] door_sensor_paging_enabling...... - http://10.66.16.162:5000/sensor/Door/interface/pair/switch/on
28-06-2017:20:11:10,89 INFO     [door_rest_cli.py:46] door_sensor_paging_enabled - http://10.66.16.162:5000/sensor/Door/interface/pair/switch/off
28-06-2017:20:11:11,91 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:11:11,91 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:11:11,91 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:11:11,91 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:11:11,91 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:11:11,91 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:11:11,97 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:11:11,98 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:11:11,99 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:11:11,100 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:11:11,101 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:11:11,101 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:11:11,101 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:11:12,102 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:11:12,118 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:11:12,119 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:11:12,119 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:11:13,42 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705832966, "deviceType":"DOOR_SENSOR", "eventType":8, "message":"Door Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:11:14,43 INFO     [validate_logs.py:31] Current Result - {"time":1498705832966, "deviceType":"DOOR_SENSOR", "eventType":8, "message":"Door Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result paging
28-06-2017:20:11:14,43 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:11:14,43 INFO     [client_hms_config.py:130] Result : paging Door Sensor Status - fail
28-06-2017:20:11:21,50 INFO     [client_hms_config.py:134] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
28-06-2017:20:11:21,51 INFO     [client_hms_config.py:135] test_door_sensor_status - Completed
28-06-2017:20:11:21,51 INFO     [client_hms_config.py:136] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.28-06-2017:20:11:21,51 INFO     [client_hms_config.py:26] -Setup for Testcase Started
28-06-2017:20:11:21,51 INFO     [client_hms_config.py:139] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
28-06-2017:20:11:21,51 INFO     [client_hms_config.py:140] test_door_sensor_status - Started
28-06-2017:20:11:21,51 INFO     [client_hms_config.py:141] +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
28-06-2017:20:11:21,76 INFO     [flood_rest_cli.py:22] water_sensor_status - http://10.66.16.162:5000
28-06-2017:20:11:28,83 INFO     [flood_rest_cli.py:101] ========> Enabling Water Sensor Tampering
28-06-2017:20:11:28,115 INFO     [flood_rest_cli.py:105] water_sensor_tampering_enabled - http://10.66.16.162:5000/sensor/Water/interface/tamper/switch/off
28-06-2017:20:11:29,116 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:11:29,117 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:11:29,117 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:11:29,117 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:11:29,117 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:11:29,117 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:11:29,122 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:11:29,124 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:11:29,125 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:11:29,126 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:11:29,126 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:11:29,126 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:11:29,126 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:11:30,128 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:11:30,141 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:11:30,141 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:11:30,141 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:11:32,273 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705888603, "deviceType":"WATER_LEAKAGE", "eventType":8, "message":"Water Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:11:33,274 INFO     [validate_logs.py:31] Current Result - {"time":1498705888603, "deviceType":"WATER_LEAKAGE", "eventType":8, "message":"Water Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result is armed
28-06-2017:20:11:33,274 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:11:33,274 INFO     [client_hms_config.py:153] Result : Tampering Water Sensor Status - pass
28-06-2017:20:11:40,281 INFO     [flood_rest_cli.py:89] ========> Enabling Water Sensor Armed
28-06-2017:20:11:40,313 INFO     [flood_rest_cli.py:93] water_sensor_tampering_disabled - http://10.66.16.162:5000/sensor/Water/interface/tamper/switch/on
28-06-2017:20:11:41,315 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:11:41,315 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:11:41,315 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:11:41,315 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:11:41,315 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:11:41,315 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:11:41,321 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:11:41,323 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:11:41,324 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:11:41,325 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:11:41,325 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:11:41,325 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:11:41,326 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:11:42,327 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:11:42,342 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:11:42,342 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:11:42,342 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:11:43,786 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705888603, "deviceType":"WATER_LEAKAGE", "eventType":8, "message":"Water Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:11:44,787 INFO     [validate_logs.py:31] Current Result - {"time":1498705888603, "deviceType":"WATER_LEAKAGE", "eventType":8, "message":"Water Sensor 1 tamper sensor is armed.", "isAlert":false, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result detects tampering
28-06-2017:20:11:44,787 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:11:44,788 INFO     [client_hms_config.py:159] Result : Arming Water Sensor Status - fail
28-06-2017:20:11:51,795 INFO     [flood_rest_cli.py:113] ========> Enabling Water Sensor Detects
28-06-2017:20:11:51,827 INFO     [flood_rest_cli.py:117] water_sensor_detects_water - http://10.66.16.162:5000/sensor/Water/interface/event/switch/on
28-06-2017:20:12:52,888 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:12:52,888 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:12:52,888 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:12:52,888 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:12:52,888 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:12:52,888 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:12:52,894 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:12:52,896 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:12:52,897 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:12:52,898 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:12:52,898 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:12:52,898 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:12:52,898 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:12:53,899 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:12:53,914 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:12:53,914 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:12:53,915 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:12:55,678 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705902864, "deviceType":"WATER_LEAKAGE", "eventType":7, "message":"Water Sensor 1 detects tampering.", "isAlert":true, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:12:56,679 INFO     [validate_logs.py:31] Current Result - {"time":1498705902864, "deviceType":"WATER_LEAKAGE", "eventType":7, "message":"Water Sensor 1 detects tampering.", "isAlert":true, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result is wet
28-06-2017:20:12:56,679 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:12:56,679 INFO     [client_hms_config.py:165] Result : Wet Water Sensor Status - fail
28-06-2017:20:13:03,687 INFO     [flood_rest_cli.py:127] ========> Enabling Water Sensor Dry
28-06-2017:20:13:03,718 INFO     [flood_rest_cli.py:131] water_sensor_detects_no_water - http://10.66.16.162:5000/sensor/Water/interface/event/switch/off
28-06-2017:20:14:04,780 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:14:04,780 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:14:04,780 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:14:04,780 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:14:04,780 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:14:04,780 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:14:04,786 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:14:04,787 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:14:04,788 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:14:04,789 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:14:04,789 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:14:04,789 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:14:04,790 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:14:05,791 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:14:05,952 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:14:05,952 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:14:05,953 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:14:07,494 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705902864, "deviceType":"WATER_LEAKAGE", "eventType":7, "message":"Water Sensor 1 detects tampering.", "isAlert":true, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:14:08,495 INFO     [validate_logs.py:31] Current Result - {"time":1498705902864, "deviceType":"WATER_LEAKAGE", "eventType":7, "message":"Water Sensor 1 detects tampering.", "isAlert":true, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result is dry
28-06-2017:20:14:08,495 INFO     [validate_logs.py:34] get_latest_logevent Ended
28-06-2017:20:14:08,495 INFO     [client_hms_config.py:171] Result : Dry Water Sensor Status - fail
28-06-2017:20:14:15,502 INFO     [flood_rest_cli.py:30] ========> Enabling Water Sensor Paging
28-06-2017:20:14:15,535 INFO     [flood_rest_cli.py:34] water_sensor_paging_enabling...... - http://10.66.16.162:5000/sensor/Water/interface/pair/switch/on
28-06-2017:20:14:17,569 INFO     [flood_rest_cli.py:45] water_sensor_paging_enabled - http://10.66.16.162:5000/sensor/Water/interface/pair/switch/off
28-06-2017:20:14:18,570 INFO     [validate_logs.py:22] get_latest_logevent Started
28-06-2017:20:14:18,571 DEBUG    [nimbits_server_id.py:53] get_nimbits_events started
28-06-2017:20:14:18,571 INFO     [nimbits_server_id.py:56] __url http://nimbits1-cert1.cn.ooma.com:9080/service/v3/rest/me?name=logPoint
28-06-2017:20:14:18,571 INFO     [nimbits_server_id.py:33] construct_nimbits_request_headers started
28-06-2017:20:14:18,571 INFO     [nimbits_server_id.py:34] OR Dict - {}
28-06-2017:20:14:18,571 INFO     [hms_sql_query.py:43] cust_pk = c3bw6mu485ea3z67tnjcqws7dhuv5wsv
28-06-2017:20:14:18,577 INFO     [hms_sql_query.py:65]  _ooma_userid select * from OOMA_USER where PK = 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv';
28-06-2017:20:14:18,578 INFO     [hms_sql_query.py:71]  _row (1231L, 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 1209L, 1209L, 'ENABLED', '6699007109', None, 'America/Los_Angeles')
28-06-2017:20:14:18,579 INFO     [hms_sql_query.py:81]  _row (1209L, 1378L, 1360L, 'hms@ooma.com', 'vbe5dbpj4', 'pgrmrv4gs')
28-06-2017:20:14:18,581 INFO     [hms_sql_query.py:86]  _row (1209L, 'vc4tpnspi', 'nxdicffbu@ooma.com')
28-06-2017:20:14:18,581 INFO     [hms_sql_query.py:97] Adding mongo_dict {'NIMBITSUSER_ID_OID': 1209L, 'cust_pk': 'c3bw6mu485ea3z67tnjcqws7dhuv5wsv', 'beehive_pwd': 'vbe5dbpj4', 'nimbits_pwd': 'vc4tpnspi', 'or_id': 1209L, 'beehive_id': 'pgrmrv4gs', 'BEEHIVEUSER_ID_OID': 1209L, 'nimbits_id': 'nxdicffbu@ooma.com'}
28-06-2017:20:14:18,581 INFO     [mongodb_setup.py:39] Mongo Connection Established with UserCredentials_collection
28-06-2017:20:14:18,581 INFO     [mongodb_setup.py:52] Already inserted to mongo DB
28-06-2017:20:14:19,582 INFO     [nimbits_server_id.py:49] construct_nimbits_request_headers ended
28-06-2017:20:14:19,597 INFO     [nimbits_server_id.py:74] get_nimbits_events ended
28-06-2017:20:14:19,598 INFO     [validate_logs.py:26] Nimbits ID = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:14:19,598 INFO     [nimbits_sql_query.py:41] id = 1238c34b-33d7-444f-87d5-5f6acd03e66d
28-06-2017:20:14:21,555 INFO     [nimbits_sql_query.py:52]  ===========> {"time":1498705902864, "deviceType":"WATER_LEAKAGE", "eventType":7, "message":"Water Sensor 1 detects tampering.", "isAlert":true, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}}
28-06-2017:20:14:22,557 INFO     [validate_logs.py:31] Current Result - {"time":1498705902864, "deviceType":"WATER_LEAKAGE", "eventType":7, "message":"Water Sensor 1 detects tampering.", "isAlert":true, "modeName":"Home",  "status": {"state":1.0, "batteryStatus":0.0, "connectionStatus":1.0}, "notifications": {"phones":[], "emails":[]}} Expected Result <addinfourl at 140278335829272 whose fp = <socket._fileobject object at 0x7f95185f77d0>>
E
======================================================================
ERROR: test_5_flood_sensor_status (__main__.HMStest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/vs/Ooma_Automation/ooma-automation/ooma/homemonitoring/test/client_hms_config.py", line 176, in test_5_flood_sensor_status
    self.status = val_log.get_latest_logevent(_result)
  File "/usr/vs/Ooma_Automation/ooma-automation/ooma/homemonitoring/server/validate_logs.py", line 33, in get_latest_logevent
    res = self.validate_result(_cur_res, exp_res)
  File "/usr/vs/Ooma_Automation/ooma-automation/ooma/homemonitoring/server/validate_logs.py", line 38, in validate_result
    if exp_res in _cur_res:
TypeError: 'in <string>' requires string as left operand, not instance

----------------------------------------------------------------------
Ran 4 tests in 260.919s

FAILED (errors=1)
('If', 'enable')
('If', 'enable')
('If', 'enable')
('If', 'enable')
('If', 'enable')
('If', 'enable')
('If', 'enable')
('If', 'enable')
('If', 'enable')
('If', 'enable')


Thanks for looking into it....
